syntax = "proto3";
package tbk.pb;
message EndPoint{
    string address = 1;
    int32 port = 2;
}
message DeviceInfo{
    string uuid = 1; // leave as empty string if not available
    // got all info from 'hostnamectl' command
    string static_hostname = 2;
    string icon_name = 3;
    string machine_id = 4;
    string boot_id = 5;
    string os = 6;
    string kernel = 7;
    string arch = 8;
}
message Subscriber{
    EndPoint ep = 1;
    string puuid = 2;
    int32 pid = 3;
    string uuid = 4;
    string msg_name = 5;
    string name = 6;
    string node_name = 7;
    string node_ns = 8;
    string ns = 9;
}
message Publisher{
    string ip = 1;
    string puuid = 2;
    int32 pid = 3;
    string uuid = 4;
    string msg_name = 5;
    string name = 6;
    string node_name = 7;
    string node_ns = 8;
    string ns = 9;
    repeated Subscriber subs = 10;
}
message Info{
    repeated Subscriber subs = 1;
    repeated Publisher pubs = 2;
}
message State{
    enum ProcessState {
        P_UNKNOWN = 0;
        P_STARTING = 1;
        P_RUNNING = 2;
        P_EXITING = 3;
    }
    string uuid = 1;
    int32 pid = 2;
    string node_name = 3;
    string node_ns = 4; // namespace
    ProcessState state = 5;
    EndPoint ep = 6;
    Info info = 7;
    DeviceInfo device_info = 8;
}

message MsgWrap{
    uint64 send_time = 1;// microseconds since epoch
    string uuid = 2;
    int32 index = 3;
    enum ProtocolType{
        PB = 0; // protobuf
        JSON = 1;
        YAML = 2;
        BYTES = 3;
    }
    ProtocolType type = 4;
    bytes data = 5;
    string type_url = 6; // message type like "std_msgs/String"
}

